# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class GetTransfersResponseTransfer(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        GetTransfersResponseTransfer - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'transaction_id': 'str',
            'payment_id': 'str',
            'timestamp': 'datetime',
            'description': 'str',
            'amount': 'Money',
            'route': 'Route',
            'state': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'transaction_id': 'transactionId',
            'payment_id': 'paymentId',
            'timestamp': 'timestamp',
            'description': 'description',
            'amount': 'amount',
            'route': 'route',
            'state': 'state'
        }

        self._id = None
        self._transaction_id = None
        self._payment_id = None
        self._timestamp = None
        self._description = None
        self._amount = None
        self._route = None
        self._state = None

    @property
    def id(self):
        """
        Gets the id of this GetTransfersResponseTransfer.


        :return: The id of this GetTransfersResponseTransfer.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this GetTransfersResponseTransfer.


        :param id: The id of this GetTransfersResponseTransfer.
        :type: str
        """
        self._id = id

    @property
    def transaction_id(self):
        """
        Gets the transaction_id of this GetTransfersResponseTransfer.


        :return: The transaction_id of this GetTransfersResponseTransfer.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """
        Sets the transaction_id of this GetTransfersResponseTransfer.


        :param transaction_id: The transaction_id of this GetTransfersResponseTransfer.
        :type: str
        """
        self._transaction_id = transaction_id

    @property
    def payment_id(self):
        """
        Gets the payment_id of this GetTransfersResponseTransfer.


        :return: The payment_id of this GetTransfersResponseTransfer.
        :rtype: str
        """
        return self._payment_id

    @payment_id.setter
    def payment_id(self, payment_id):
        """
        Sets the payment_id of this GetTransfersResponseTransfer.


        :param payment_id: The payment_id of this GetTransfersResponseTransfer.
        :type: str
        """
        self._payment_id = payment_id

    @property
    def timestamp(self):
        """
        Gets the timestamp of this GetTransfersResponseTransfer.


        :return: The timestamp of this GetTransfersResponseTransfer.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """
        Sets the timestamp of this GetTransfersResponseTransfer.


        :param timestamp: The timestamp of this GetTransfersResponseTransfer.
        :type: datetime
        """
        self._timestamp = timestamp

    @property
    def description(self):
        """
        Gets the description of this GetTransfersResponseTransfer.


        :return: The description of this GetTransfersResponseTransfer.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this GetTransfersResponseTransfer.


        :param description: The description of this GetTransfersResponseTransfer.
        :type: str
        """
        self._description = description

    @property
    def amount(self):
        """
        Gets the amount of this GetTransfersResponseTransfer.


        :return: The amount of this GetTransfersResponseTransfer.
        :rtype: Money
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """
        Sets the amount of this GetTransfersResponseTransfer.


        :param amount: The amount of this GetTransfersResponseTransfer.
        :type: Money
        """
        self._amount = amount

    @property
    def route(self):
        """
        Gets the route of this GetTransfersResponseTransfer.


        :return: The route of this GetTransfersResponseTransfer.
        :rtype: Route
        """
        return self._route

    @route.setter
    def route(self, route):
        """
        Sets the route of this GetTransfersResponseTransfer.


        :param route: The route of this GetTransfersResponseTransfer.
        :type: Route
        """
        self._route = route

    @property
    def state(self):
        """
        Gets the state of this GetTransfersResponseTransfer.


        :return: The state of this GetTransfersResponseTransfer.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """
        Sets the state of this GetTransfersResponseTransfer.


        :param state: The state of this GetTransfersResponseTransfer.
        :type: str
        """
        self._state = state

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

